#include <iostream>
#include <time.h>

using namespace std;
int cut_rod(int* p, int n)
{
    int q;
    if (n == 0){return 0;}
    q=p[0];
    for (int i=0;i<n;i++)
    {
        q=max(q,p[i]+cut_rod(p,n-i-1));
    }
     return q;
}
int memoized_cut_rod_aux(int* p, int n, int* r)
{
    if(r[n-1]>=0){return r[n-1];}
    int q;
    if (n == 0){q = 0;}
    else
    {
        q=-1000;
        for (int i=0;i<n;i++)
        {
            q=max(q,p[i]+ memoized_cut_rod_aux(p,n-i-1,r));
        }
    }
    r[n-1]=q;
    return q;
}
int memoized_cut_rod(int *p,int n)
{
    int r[n];
    for (int i=0;i<n;i++)
    {
        r[i]=-1000;
    }
    return memoized_cut_rod_aux(p,n,r);
}

int bottom_up_cut_rod(int*p, int n)
{
    int r[n+1],q;
    r[0]=0;
    for(int j=0;j<n;j++)
    {
        q=-1000;
        for(int i=0;i<=j;i++)
        {
            q=max(q,p[i]+ r[j-i]);
        }
        r[j+1]=q;
    }
    return r[n];
}
int extended_bottom_up_cut_rod(int*p, int n)
{
    int r[n+1],s[n],q;
    r[0]=0;
    for(int j=0;j<n;j++)
    {
        q=-1000;
        for(int i=0;i<=j;i++)
        {
            if(q<p[i]+r[j-i])
            {
                q=p[i]+ r[j-i];
                s[j]=i+1;
            }
        }
        r[j+1]=q;
    }
    int N=n;
    while(N>0)
    {
        cout<<"Cut                                :"<<s[N-1]<<endl;
        N=N-s[N-1];
    }

    return r[n];

}


int main()
{
    cout << "Rod Cutting!" << endl;
    //       1,2,3,4, 5, 6, 7, 8, 9,10
    int p[]={1,5,8,9,10,17,17,20,24,30};

    clock_t t;
    cout<<"Price: (cut rod)                   :";
    t = clock();
    cout<<cut_rod(p,10)<<endl;
    t = clock() - t;
    cout<<"Tiempo: "<<t<<endl;
    cout<<"Price:(memoized cut rod)           :";
    t = clock();
    cout<<memoized_cut_rod(p,10)<<endl;
    t = clock() - t;
    cout<<"Tiempo: "<<t<<endl;
    cout<<"Price:(bottom up cut rod)          :";
    t = clock();
    cout<<bottom_up_cut_rod(p,10)<<endl;
    t = clock() - t;
    cout<<"Tiempo: "<<t<<endl;
    cout<<"(extended bottom up cut rod) :"<<endl;

    t = clock();
    cout<<"Price                              :"<<extended_bottom_up_cut_rod(p,10)<<endl;
    t = clock() - t;
    cout<<"Tiempo: "<<t<<endl;
    return 0;
}
